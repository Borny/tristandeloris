{"version":3,"sources":["sw.js"],"names":["staticVersion","DYNAMIC_CACHE","STATIC_FILES","console","log","self","addEventListener","event"],"mappings":"AAAA,MAAMA,aAAa,eAAnB;AACA,MAAMC,aAAa,gBAAnB;AAEA,MAAMC,YAAY,GAAG,CACjB,aADiB,EAEjB;AACA;AACA;AACA;AACA;AACA,uBAPiB,CAArB,EAUA;;AACAC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAkCC,KAAD,IAAW;AACxCJ,EAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8DG,KAA9D,EADwC,CAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAXD,GAaA;;AACAF,IAAI,CAACC,gBAAL,CAAsB,UAAtB,EAAmCC,KAAD,IAAW;AACzCJ,EAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8DG,KAA9D,EADyC,CAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAhBD,GAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAF,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+BC,KAAK,IAAI;AACpCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,CAFD,GAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sw.js","sourceRoot":"../src","sourcesContent":["const staticVersion = `static-001`\nconst DYNAMIC_CACHE = `dynamic-001`\n\nconst STATIC_FILES = [\n    '/index.html',\n    //   '/pages/offline.html',\n    //   '/js.d818e0ef.css',\n    //   '/main.847ea5f6.css',\n    //   '/js.d818e0ef.js',\n    //   '/favicon.26242483.ico',\n    '/manifest.webmanifest'\n]\n\n// // INSTALL\nconsole.log('[Service Worker]')\nself.addEventListener('install', (event) => {\n    console.log('[Service Worker] Installing service worker ...', event)\n    // event.waitUntil(\n    //     caches.open(staticVersion).then((cache) => {\n    //         console.log(\n    //             '[Service Worker] Precaching app shell (index.html,css.js...) ...',\n    //             event\n    //         )\n    //         cache.addAll(STATIC_FILES)\n    //     })\n    // )\n})\n\n// ACTIVATE\nself.addEventListener('activate', (event) => {\n    console.log('[Service Worker] Activating service worker ...', event)\n    // event.waitUntil(\n    //     caches.keys().then((keyList) => {\n    //         console.log(keyList)\n    //         return Promise.all(\n    //             keyList.map((key) => {\n    //                 if (key !== staticVersion && key !== DYNAMIC_CACHE) {\n    //                     console.log('removed cache : ', key)\n    //                     caches.delete(key)\n    //                 }\n    //             })\n    //         )\n    //     })\n    // )\n    // return self.clients.claim()\n})\n\n// self.addEventListener('fetch', (event) => {\n//   event.respondWith(\n//     caches.match(event.request).then((response) => {\n//       if (response) {\n//         return response;\n//       } else {\n//         return fetch(event.request)\n//           .then((serverRes) => {\n//             return caches.open(DYNAMIC_CACHE).then((cache) => {\n//               cache.put(event.request.url, serverRes.clone());\n//               return serverRes;\n//             });\n//           })\n//           .catch((err) => {\n//             console.log('fetch error :', err);\n//             return caches.open(staticVersion).then((cache) => {\n//               return cache.match('/pages/offline.html');\n//             });\n//           });\n//       }\n//     })\n//   );\n// });\n\nself.addEventListener('fetch', event => {\n    console.log(event)\n})\n\n// self.addEventListener('fetch', (event) => {\n//     const URL = 'https://httpbin.org/get'\n\n//     if (event.request.url.indexOf(URL) > -1) {\n//         event.respondWith(\n//             caches.open(DYNAMIC_CACHE)\n//                 .then((cache) => {\n//                     return fetch(event.request)\n//                         .then((res) => {\n//                             cache.put(event.request, res.clone())\n//                             return res\n//                         })\n//                 })\n//         )\n//     } else if (STATIC_FILES.some(file =>\n//         file === event.request.url)) {\n//         // console.log(requestNumber)\n//         // requestNumber++\n\n//         event.respondWith(\n//             caches.match(event.request)\n//         )\n//     } else {\n//         event.respondWith(\n//             caches.match(event.request)\n//                 .then(response => {\n//                     if (response) {\n//                         return response\n//                     } else {\n//                         return fetch(event.request)\n//                             .then(res => {\n//                                 return caches.open(DYNAMIC_CACHE)\n//                                     .then(cache => {\n//                                         cache.put(event.request.url, res.clone())\n//                                         return res\n//                                     })\n//                             })\n//                             .catch(err => {\n//                                 return caches.open(staticVersion)\n//                                     .then(cache => {\n//                                         if (event.request.headers.get('accept').includes('text/html')) {\n//                                             return cache.match('/pages/offline.html')\n//                                         }\n//                                     })\n//                             })\n//                     }\n//                 })\n//         )\n//     }\n// })\n"]}